# Import OpenCV2 for image processing
import cv2
# Import numpy for matrices calculations
import numpy as np
import time
import datetime
# Create Local Binary Patterns Histograms for face recognization
#recognizer = cv2.face.createLBPHFaceRecognizer()
recognizer = cv2.face.LBPHFaceRecognizer_create()
# Load the trained mode
recognizer.read(‘trainer/trainer.yml’)
# Load prebuilt model for Frontal Face
cascadePath = “haarcascade_frontalface_default.xml”
# Create classifier from prebuilt model
faceCascade = cv2.CascadeClassifier(cascadePath);
# Set the font style
font = cv2.FONT_HERSHEY_SIMPLEX
# Initialize and start the video frame capture
cam = cv2.VideoCapture(0)
f=open(“Database.txt”, ‘a’)
f.write(“\Ndate \t TIME \t \t \t TEACHER NAME \t \t STUDENT NAME\n “)
print(‘Executing the script’) 
f.close()
# Local variable Declaration
lecture=0
count1=0
count2=0
count3=0
count4=0
count5=0
sample=0
take=1
# Loop
while True:
now = datetime.datetime.now()
# Read the video frame
ret, im =cam.read()
# Convert the captured frame into grayscale
gray = cv2.cvtColor(im,cv2.COLOR_BGR2GRAY)
# Get all face from the video frame
faces = faceCascade.detectMultiScale(gray, 1.2,5)
# For each face in faces
for(x,y,w,h) in faces:
# Create rectangle around the face
cv2.rectangle(im, (x-20,y-20), (x+w+20,y+h+20), (0,255,0), 4)
